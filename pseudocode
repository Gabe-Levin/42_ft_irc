START
  parse command line arguments: <port> <password>

  // 1. Setup
  listen_socket = create TCP socket bound to <port>
  set listen_socket to non-blocking
  add listen_socket to poll list

  clients = empty map<fd, ClientState>

  LOOP forever
    call poll() on listen_socket + all client sockets

    // 2. Accept new connections
    if listen_socket is ready:
       accept new connection
       set new socket non-blocking
       create ClientState {fd, inbuf="", outbuf="", nick="", user="", registered=false}
       add to poll list and to clients

    // 3. Handle client input
    for each client socket with POLLIN:
       read() bytes â†’ append to client.inbuf
       while a full line (\r\n) is available:
           line = pop_line()
           handle_command(client, line)

    // 4. Handle client output
    for each client socket with POLLOUT and outbuf not empty:
       send() as much as possible from client.outbuf
       remove sent bytes from buffer

    // 5. Cleanup
    if recv() == 0 or error:
       close socket
       remove client from map and poll list
  END LOOP
END
